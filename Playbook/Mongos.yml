---
- name: Setup and start mongos with shard config
  hosts: n1  # Run only on 172.24.7.37 where mongos runs
  become: yes
  vars:
    mongos_port: 27054
    log_path: /var/log/mongodb/mongos1.log
    keyfile_path: /data/mongodb-keyfile

  tasks:

    - name: Build dynamic config server string
      set_fact:
        config_servers: >-
          {{ groups['g1'] | map('extract', hostvars)
                          | map('community.general.dict_kv', 'ansible_host', 'config_port')
                          | map('join', ':')
                          | join(',') }}

    - name: Build shard definitions dynamically using hostvars
      set_fact:
        shard1: >-
          {{ groups['g1'] | map('extract', hostvars)
                          | map('community.general.dict_kv', 'ansible_host', 'shard1_port')
                          | map('join', ':')
                          | join(',') }}
        shard2: >-
          {{ groups['g1'] | map('extract', hostvars)
                          | map('community.general.dict_kv', 'ansible_host', 'shard2_port')
                          | map('join', ':')
                          | join(',') }}
        shards:
          - "rsShard1/{{ shard1 }}"
          - "rsShard2/{{ shard2 }}"


    - name: Ensure mongos log file exists
      file:
        path: "{{ log_path }}"
        state: touch
        owner: mongodb
        group: mongodb
        mode: '0644'

    - name: Start mongos router
      become_user: mongodb
      shell: |
        mongos \
          --configdb configReplSet/{{ config_servers }} \
          --port {{ mongos_port }} \
          --bind_ip 0.0.0.0 \
          --fork \
          --logpath {{ log_path }} \
          --logappend
          # --keyFile {{ keyfile_path }}
      args:
        creates: /tmp/mongos_started.flag
      register: mongos_start

    - name: Create flag file to prevent rerun of mongos
      file:
        path: /tmp/mongos_started.flag
        state: touch
      when: mongos_start is changed

    - name: Add shards via mongos
      shell: |
        mongosh --host localhost --port {{ mongos_port }} <<EOF
        {% for shard in shards %}
        sh.addShard("{{ shard }}");
        {% endfor %}
        EOF
      register: add_shards_result

    - name: Show shard addition result
      debug:
        var: add_shards_result.stdout_lines
